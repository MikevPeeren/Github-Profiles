{"version":3,"sources":["components/SearchForm.tsx","components/ProjectCard.tsx","api/GithubApi.ts","components/GithubProfile.tsx","constants/general.ts","App.tsx","index.tsx"],"names":["SearchForm","props","useState","warningText","setWarningText","inputElement","useRef","setNewGithubUser","handleUsernameSearch","current","value","useEffect","errorText","InputGroup","className","FormControl","ref","onKeyPress","event","key","placeholder","Append","Button","onClick","ProjectCard","Card","Body","Title","Text","searchForGithubProfile","inputFieldGitHubUser","a","GET_USER","axios","create","baseURL","headers","Authorization","process","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","post","query","then","result","data","errors","Error","user","catch","error","GithubProfile","setInputFieldGitHubUser","githubUser","setGithubUser","setErrorText","message","length","searchForGitHubUser","App","ReactDOM","render","document","getElementById"],"mappings":"0XAiEeA,EA9C+B,SAACC,GAAW,IAAD,EAClBC,mBAAS,IADS,mBACjDC,EADiD,KACpCC,EADoC,KAElDC,EAAeC,iBAAO,MAEpBC,EAAqBN,EAArBM,iBAEFC,EAAuB,WAC5BJ,EAAe,IAEXC,GAAgBA,EAAaI,SAA0C,KAA/BJ,EAAaI,QAAQC,MAEhEH,EAAiBF,EAAaI,QAAQC,OAClCN,EAAe,UAOrB,OAJAO,qBAAU,WACTP,EAAeH,EAAMW,aACnB,CAACX,EAAMW,YAGT,oCACC,kBAACC,EAAA,EAAD,CAAYC,UAAU,cACrB,kBAACC,EAAA,EAAD,CACCC,IAAKX,EACLY,WAAY,SAACC,GACM,UAAdA,EAAMC,KACTX,KAGFY,YAAY,oBAEb,kBAACP,EAAA,EAAWQ,OAAZ,KACC,kBAACC,EAAA,EAAD,CACCC,QAAS,WACRf,MAGD,kBAAC,IAAD,SAIFL,GAAe,0BAAMW,UAAU,2BAA2BX,K,OCtC/CqB,G,MAbK,WACnB,OACC,kBAACC,EAAA,EAAD,KACC,kBAACA,EAAA,EAAKC,KAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,mBACA,kBAACF,EAAA,EAAKG,KAAN,2G,iBCSSC,EAAsB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAC/BC,EAD+B,wCAGfF,EAHe,kFAd9BG,IAAMC,OAAO,CACnBC,QAAS,iCACTC,QAAS,CACRC,cAAc,UAAD,OAAYC,mIAAYC,2CAsBrCC,KAAK,GAAI,CAAEC,MAAOT,IAClBU,MAAK,SAACC,GACN,GAAIA,EAAOC,KAAKC,OAAQ,MAAM,IAAIC,MAAM,2BACxC,OAAOH,EAAOC,KAAKA,KAAKG,QAExBC,OAAM,SAACC,GAEP,MAAMA,KAlB6B,mFAAH,sDCoDpBC,EA5DO,WAAO,IAAD,EAC6BhD,mBAAS,IADtC,mBACpB4B,EADoB,KACEqB,EADF,OAESjD,mBAAS,IAFlB,mBAEpBkD,EAFoB,KAERC,EAFQ,OAGOnD,mBAAS,IAHhB,mBAGpBU,EAHoB,KAGT0C,EAHS,KAK3B3C,qBAAU,WAAM,4CACf,4BAAAoB,EAAA,+EAEuBF,EAAuBC,GAF9C,OAEQa,EAFR,OAGEU,EAAcV,GACdW,EAAa,IAJf,gDAMEA,EAAa,KAAMC,SANrB,0DADe,sBAWqB,IAAhCzB,EAAqB0B,QAXT,WAAD,wBAWwBC,KACrC,CAAC3B,IAYJ,OACC,oCACC,yBAAKhB,UAAU,kBACd,4BAAQA,UAAU,0BACjB,2BChDgC,oBDkDjC,kBAAC,EAAD,CAAYP,iBAVU,SAAC6C,GACzBD,EAAwBC,IAS0BxC,UAAWA,KAE5D,yBAAKE,UAAU,mBACd,yBAAKA,UAAU,4BACd,yBAAKA,UAAU,2BAA2BsC,GAAc,kBAAC,EAAD,OACxD,yBAAKtC,UAAU,iCACbsC,GACA,oCACC,yBAAKtC,UAAU,2CACd,kBAAC,EAAD,MACA,kBAAC,EAAD,OAED,yBAAKA,UAAU,4CACd,kBAAC,EAAD,MACA,kBAAC,EAAD,aElDM4C,EARH,WACX,OACC,yBAAK5C,UAAU,OACd,kBAAC,EAAD,QCEH6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.91966663.chunk.js","sourcesContent":["// React\nimport React, { useRef, useState, useEffect } from 'react';\n\n// Boostrap\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\n// CSS\nimport './SearchForm.scss';\n\n// Icons\nimport { FaSearch } from 'react-icons/fa';\n\ninterface SearchFormProps {\n\tsetNewGithubUser: Function;\n\terrorText: string;\n}\n\nconst SearchForm: React.FC<SearchFormProps> = (props) => {\n\tconst [warningText, setWarningText] = useState('');\n\tconst inputElement = useRef(null);\n\n\tconst { setNewGithubUser } = props;\n\n\tconst handleUsernameSearch = () => {\n\t\tsetWarningText('');\n\t\t//@ts-ignore\n\t\tif (inputElement && inputElement.current && inputElement.current.value !== '')\n\t\t\t//@ts-ignore\n\t\t\tsetNewGithubUser(inputElement.current.value);\n\t\telse setWarningText('Error');\n\t};\n\n\tuseEffect(() => {\n\t\tsetWarningText(props.errorText);\n\t}, [props.errorText]);\n\n\treturn (\n\t\t<>\n\t\t\t<InputGroup className=\"SearchForm\">\n\t\t\t\t<FormControl\n\t\t\t\t\tref={inputElement}\n\t\t\t\t\tonKeyPress={(event: any) => {\n\t\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\t\thandleUsernameSearch();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"Github Username\"\n\t\t\t\t/>\n\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thandleUsernameSearch();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FaSearch />\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Append>\n\t\t\t</InputGroup>\n\t\t\t{warningText && <span className=\"SearchForm__WarningText\">{warningText}</span>}\n\t\t</>\n\t);\n};\n\nexport default SearchForm;\n","// React\nimport React from 'react';\n\n// Boostrap\nimport Card from 'react-bootstrap/Card';\n\n// CSS\nimport './ProjectCard.scss';\n\nconst ProjectCard = () => {\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>Card Title</Card.Title>\n\t\t\t\t<Card.Text>\n\t\t\t\t\tSome quick example text to build on the card title and make up the bulk of the card's content.\n\t\t\t\t</Card.Text>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\nexport default ProjectCard;\n","// Api\nimport axios from 'axios';\n\n/**\n * Generate a new connection to the GitHub GraphQL API\n *\n * @returns {}\n */\nconst setupGitHubConnection = () => {\n\treturn axios.create({\n\t\tbaseURL: 'https://api.github.com/graphql',\n\t\theaders: {\n\t\t\tAuthorization: `bearer ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`,\n\t\t},\n\t});\n};\n\n/**\n * Search through the Github GraphQL to find a Github User.\n *\n * @param {string} inputFieldGitHubUser\n * @returns {array}\n */\nexport const searchForGithubProfile = async (inputFieldGitHubUser: string) => {\n\tconst GET_USER = `\n    {\n        user(login: \"${inputFieldGitHubUser}\" ) {\n            avatarUrl\n            bio\n        }\n    }\n    `;\n\n\treturn await setupGitHubConnection()\n\t\t.post('', { query: GET_USER })\n\t\t.then((result) => {\n\t\t\tif (result.data.errors) throw new Error('Invalid Query Provided.');\n\t\t\treturn result.data.data.user;\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// Up Up and Away\n\t\t\tthrow error;\n\t\t});\n};\n","// React\nimport React, { useState, useEffect } from 'react';\n\n// CSS\nimport './GithubProfile.scss';\n\n// Constants\nimport { GITHUB_PROFILE_HEADER } from '../constants/general';\n\n// Components\nimport SearchForm from './SearchForm';\nimport ProjectCard from './ProjectCard';\n\nimport { searchForGithubProfile } from '../api/GithubApi';\n\nconst GithubProfile = () => {\n\tconst [inputFieldGitHubUser, setInputFieldGitHubUser] = useState('');\n\tconst [githubUser, setGithubUser] = useState('');\n\tconst [errorText, setErrorText] = useState('');\n\n\tuseEffect(() => {\n\t\tasync function searchForGitHubUser() {\n\t\t\ttry {\n\t\t\t\tconst result = await searchForGithubProfile(inputFieldGitHubUser);\n\t\t\t\tsetGithubUser(result);\n\t\t\t\tsetErrorText('');\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorText(error.message);\n\t\t\t}\n\t\t}\n\n\t\tif (inputFieldGitHubUser.length !== 0) searchForGitHubUser();\n\t}, [inputFieldGitHubUser]);\n\n\t/**\n\t * Updates the State of Github User\n\t *\n\t * @param {string} githubUser\n\t * @returns {void}\n\t */\n\tconst setNewGithubUser = (githubUser: string) => {\n\t\tsetInputFieldGitHubUser(githubUser);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"GithubProfiles\">\n\t\t\t\t<header className=\"GithubProfiles__header\">\n\t\t\t\t\t<p>{GITHUB_PROFILE_HEADER}</p>\n\t\t\t\t</header>\n\t\t\t\t<SearchForm setNewGithubUser={setNewGithubUser} errorText={errorText} />\n\t\t\t</div>\n\t\t\t<div className=\"GithubContainer\">\n\t\t\t\t<div className=\"GithubContainer__Wrapper\">\n\t\t\t\t\t<div className=\"GithubContainer__Avatar\">{githubUser && <ProjectCard />}</div>\n\t\t\t\t\t<div className=\"GithubContainer__Repositories\">\n\t\t\t\t\t\t{githubUser && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"GithubContainer__Repositories--firstRow\">\n\t\t\t\t\t\t\t\t\t<ProjectCard />\n\t\t\t\t\t\t\t\t\t<ProjectCard />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"GithubContainer__Repositories--secondRow\">\n\t\t\t\t\t\t\t\t\t<ProjectCard />\n\t\t\t\t\t\t\t\t\t<ProjectCard />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default GithubProfile;\n","export const GITHUB_PROFILE_HEADER = 'Github Profiles';\n","// React\nimport React from 'react';\n\n// Components\nimport GithubProfile from './components/GithubProfile';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<GithubProfile />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// CSS\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Component\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}